{"version":3,"sources":["App.js","index.js"],"names":["generator","rough","creatingElement","id","x1","y1","x2","y2","type","roughElement","line","rectangle","nearPoint","x","y","name","Math","abs","positionWithinElement","element","topLeft","topRight","bottomLeft","bottomRight","a","b","c","offset","distance","start","end","inside","sqrt","pow","getElementAtPosition","elements","map","position","find","App","initialState","useState","index","setIndex","history","setHistory","action","overwrite","newState","historyCopy","updatedState","slice","prevState","length","useHistory","setElements","undo","redo","setAction","tool","setTool","selectedElement","setSelectedElement","useLayoutEffect","canvas","document","getElementById","getContext","clearRect","width","height","roughCanvas","forEach","draw","useEffect","undoRedoFunction","event","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","updateElement","updatedElement","elementsCopy","style","checked","onChange","htmlFor","bottom","padding","onClick","window","innerHeight","innerWidth","onMouseDown","e","clientX","clientY","offsetX","offsetY","onMouseMove","target","cursor","cursorForPosition","newX1","newY1","coordinates","resizedCoordinates","onMouseUp","minX","min","maxX","max","adjustElementCoordinates","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f608594e.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm\";\nconst generator = rough.generator();\n\nconst creatingElement = (id, x1, y1, x2, y2, type) => {\n  const roughElement =\n    type === \"line\"\n      ? generator.line(x1, y1, x2, y2)\n      : generator.rectangle(x1, y1, x2 - x1, y2 - y1);\n  return { id, x1, y1, x2, y2, type, roughElement };\n};\n\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\n\n//function to whwther the coordinates match any existing element\nconst positionWithinElement = (x, y, element) => {\n  const { type, x1, x2, y1, y2 } = element;\n  if (type === \"rectangle\") {\n    const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n    const topRight = nearPoint(x, y, x2, y1, \"tr\");\n    const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n    const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n    const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n    return topLeft || topRight || bottomLeft || bottomRight || inside;\n  } else {\n    const a = { x: x1, y: y1 };\n    const b = { x: x2, y: y2 };\n    const c = { x, y };\n    //logic for checking whether the point is on line\n    const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n    const start = nearPoint(x, y, x1, y1, \"start\");\n    const end = nearPoint(x, y, x2, y2, \"end\");\n    const inside = Math.abs(offset) < 1 ? \"inside\" : null;\n    return start || end || inside;\n  }\n};\n// calculating distance among two points\nconst distance = (a, b) =>\n  Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\nconst cursorForPosition = (position) => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n    default:\n      return \"move\";\n  }\n};\n\n// function for adjusting coordinates\nconst adjustElementCoordinates = (element) => {\n  const { type, x1, y1, x2, y2 } = element;\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\n  } else {\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n      return { x1, y1, x2, y2 };\n    } else {\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\n    }\n  }\n};\n\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const { x1, y1, x2, y2 } = coordinates;\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return { x1: clientX, y1: clientY, x2, y2 };\n    case \"tr\":\n      return { x1, y1: clientY, x2: clientX, y2 };\n    case \"bl\":\n      return { x1: clientX, y1, x2, y2: clientY };\n    case \"br\":\n    case \"end\":\n      return { x1, y1, x2: clientX, y2: clientY };\n    default:\n      return null; //should not really get here...\n  }\n};\n\n// in order to maintain redo/undo\nconst useHistory = (initialState) => {\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n\n  const setState = (action, overwrite = false) => {\n    const newState =\n      typeof action === \"function\" ? action(history[index]) : action;\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex((prevState) => prevState + 1);\n    }\n  };\n\n  const undo = () => index > 0 && setIndex((prevState) => prevState - 1);\n  const redo = () =>\n    index < history.length - 1 && setIndex((prevState) => prevState + 1);\n\n  return [history[index], setState, undo, redo];\n};\n\n// function for getting element for selection\nconst getElementAtPosition = (x, y, elements) => {\n  return elements\n    .map((element) => ({\n      ...element,\n      position: positionWithinElement(x, y, element),\n    }))\n    .find((element) => element.position !== null);\n};\n\nconst App = () => {\n  const [elements, setElements, undo, redo] = useHistory([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"line\");\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const roughCanvas = rough.canvas(canvas);\n\n    elements.forEach(({ roughElement }) => roughCanvas.draw(roughElement));\n    // const rect = generator.rectangle(10, 10, 100, 100);\n\n    // roughCanvas.draw(rect);\n\n    // ctx.fillStyle = \"green\";\n    // ctx.fillRect(10, 10, 150, 100);\n  }, [elements]);\n\n  useEffect(() => {\n    const undoRedoFunction = (event) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === \"z\") {\n        if (event.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n  }, [undo, redo]);\n\n  const updateElement = (id, x1, y1, x2, y2, type) => {\n    const updatedElement = creatingElement(id, x1, y1, x2, y2, type);\n\n    const elementsCopy = [...elements];\n    elementsCopy[id] = updatedElement;\n    setElements(elementsCopy, true);\n  };\n\n  const handleMouseDown = (e) => {\n    const { clientX, clientY } = e;\n    // if we have choosen tool as select to select some existing element than\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      if (element) {\n        const offsetX = clientX - element.x1;\n        const offsetY = clientY - element.y1;\n        setSelectedElement({ ...element, offsetX, offsetY });\n        // setAction(\"moving\");\n        setElements((prevState) => prevState);\n        if (element.position === \"inside\") {\n          setAction(\"moving\");\n        } else {\n          setAction(\"resizing\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      setAction(\"drawing\");\n\n      // now we need to create elements\n      const element = creatingElement(\n        id,\n        clientX,\n        clientY,\n        clientX,\n        clientY,\n        tool\n      );\n      setElements((prevState) => [...prevState, element]);\n    }\n  };\n  const handleMouseMove = (event) => {\n    const { clientX, clientY } = event;\n\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      event.target.style.cursor = element\n        ? cursorForPosition(element.position)\n        : \"default\";\n    }\n    if (action === \"drawing\") {\n      const index = elements.length - 1;\n      const { x1, y1 } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n      // const elementsCopy = [...elements];\n      // elementsCopy[index] = updatedElement;\n      // setElements(elementsCopy);\n    } else if (action === \"moving\") {\n      const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\n      const width = x2 - x1;\n      const height = y2 - y1;\n      const newX1 = clientX - offsetX;\n      const newY1 = clientY - offsetY;\n      updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\n    } else if (action === \"resizing\") {\n      const { id, type, position, ...coordinates } = selectedElement;\n      const { x1, y1, x2, y2 } = resizedCoordinates(\n        clientX,\n        clientY,\n        position,\n        coordinates\n      );\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n  const handleMouseUp = (e) => {\n    if (selectedElement) {\n      const index = selectedElement.id;\n      const { id, type } = elements[index];\n      if (action === \"drawing\" || action === \"resizing\") {\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n    setAction(\"none\");\n    setSelectedElement(null);\n  };\n\n  return (\n    <div>\n      <div style={{ position: \"fixed\" }}>\n        <input\n          type=\"radio\"\n          id=\"select\"\n          checked={tool === \"select\"}\n          onChange={() => setTool(\"select\")}\n        />\n        <label htmlFor=\"select\">Select</label>\n        <input\n          type=\"radio\"\n          id=\"line\"\n          checked={tool === \"line\"}\n          onChange={() => setTool(\"line\")}\n        />\n        <label htmlFor=\"line\">Line</label>\n        <input\n          type=\"radio\"\n          id=\"rectangle\"\n          checked={tool === \"rectangle\"}\n          onChange={() => setTool(\"rectangle\")}\n        />\n        <label htmlFor=\"rectangle\">Rectangle</label>\n      </div>\n      <div style={{ position: \"fixed\", bottom: 0, padding: 10 }}>\n        <button onClick={undo}>Undo</button>\n        <button onClick={redo}>Redo</button>\n      </div>\n      <canvas\n        id=\"canvas\"\n        height={window.innerHeight}\n        width={window.innerWidth}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        canvas\n      </canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}